#include<iostream> 
#include<cstdio> 
#include<algorithm> 
#include <cstring>
using namespace std;

#define in(x) x=read()

#define MAXN 2010

// 注意sort的两种方法 cmp

struct Data {
	int index, v;
	bool operator<(Data a) {
		if (v == a.v)
			return index < a.index;
		return v > a.v;
	}
};

inline int read() {
	int X = 0, w = 1;
	char ch = getchar();
	while (ch<'0' || ch>'9') { if (ch == '-') w = -1; ch = getchar(); }
	while (ch >= '0' && ch <= '9') X = (X << 3) + (X << 1) + ch - '0', ch = getchar();
	return X*w;
}

int n, k, E[15], D[20010];
Data arr[20010];

bool cmp(int a, int b) {
	if (arr[a].v == arr[b].v)
		return arr[a].index < arr[b].index;
	return arr[a].v > arr[b].v;
}

int main() {
	for (int i = 0; i <= 20000; ++i)
		D[i] = i;
	in(n);
	in(k);

	for (int i = 1; i <= 10; ++i) {
		in(E[i]);
	}

	for (int i = 1; i <= n; ++i) {
		in(arr[i].v);
		arr[i].index = i;
	}

	sort(D + 1, D + 1 + n, cmp);

	for (int i = 1; i <= n; ++i) {
		arr[D[i]].v += E[(i - 1) % 10 + 1];			// 注意这里是哪里作为序号, D[i] or i, D[i]记录的是排序前的下标, 这种方法很不错
	}

	sort(arr + 1, arr + 1 + n);

	printf("%d", arr[1].index);
	for (int i = 2; i <= k; ++i)
		printf(" %d", arr[i].index);
	

	return 0;
}

/*

题目描述
一共有n（n≤20000）个人（以1--n编号）向佳佳要照片，而佳佳只能把照片给其中的k个人。佳佳按照与他们的关系好坏的程度给每个人赋予了一个初始权值W[i]。然后将初始权值从大到小进行排序，每人就有了一个序号D[i]（取值同样是1--n）。按照这个序号对10取模的值将这些人分为10类。也就是说定义每个人的类别序号C[i]的值为(D[i]-1) mod 10 +1，显然类别序号的取值为1--10。第i类的人将会额外得到E[i]的权值。你需要做的就是求出加上额外权值以后，最终的权值最大的k个人，并输出他们的编号。在排序中，如果两人的W[i]相同，编号小的优先。

输入输出格式
输入格式：
第一行输入用空格隔开的两个整数，分别是n和k。

第二行给出了10个正整数，分别是E[1]到E[10]。

第三行给出了n个正整数，第i个数表示编号为i的人的权值W[i]。

输出格式：
只需输出一行用空格隔开的k个整数，分别表示最终的W[i]从高到低的人的编号。

输入输出样例
输入样例#1：
10 10
1 2 3 4 5 6 7 8 9 10
2 4 6 8 10 12 14 16 18 20
输出样例#1：
10 9 8 7 6 5 4 3 2 1

*/